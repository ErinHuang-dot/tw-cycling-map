{"version":3,"sources":["all.js"],"names":["mymap","L","map","setView","tileLayer","attribution","maxZoom","id","tileSize","zoomOffset","accessToken","addTo","navigator","geolocation","getCurrentPosition","position","longitude","coords","latitude","getSationData","e","msg","code","dd","message","console","log","GetAuthorizationHeader","AppID","AppKey","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","HMAC","getHMAC","Authorization","data","axios","method","url","headers","then","response","getAvailableData","error","filterData","availableData","forEach","availableItem","stationItem","StationUID","StationName","StationAddress","StationPosition","push","setMarker","item","marker","PositionLat","PositionLon","bindPopup","Zh_tw","AvailableRentBikes"],"mappings":"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","file":"all.js","sourcesContent":["// 載入 mapbox\nconst mymap = L.map('bikeMap').setView([24.137407449737076, 120.68691963575823], 13);\n\nL.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    maxZoom: 18,\n    id: 'mapbox/streets-v11',\n    tileSize: 512,\n    zoomOffset: -1,\n    accessToken: 'pk.eyJ1IjoiZXJpbmh1YW5nIiwiYSI6ImNrdmkzY3ByOTF2ajAzMHFmMjlqNmFsMDgifQ.TkoOhH9ZSuXuwKRz2XG0Rg'\n}).addTo(mymap);\n\n// 使用 navigator web api 取得使用者裝置位置\nif (navigator.geolocation) {\n  navigator.geolocation.getCurrentPosition(\n      function(position) {\n          const longitude = position.coords.longitude;\n          const latitude = position.coords.latitude;\n          // console.log(longitude);\n          // console.log(latitude); 裝置會跳視窗 \"XX網只想知道你在的位置\"\n          \n          // 重新設定 view 的位置\n          mymap.setView([latitude, longitude], 13)\n          //將經緯度當作參數傳給 getData 執行\n          getSationData(longitude, latitude);\n      },\n      // 錯誤訊息\n      function(e) {\n          const msg = e.code;\n          const dd = e.message;\n          console.log(msg);\n          console.log(dd);\n      }\n  )\n}\n\n// TDX API 驗證\nfunction GetAuthorizationHeader() {\n  var AppID = 'f7c6d9e58f254fe5af3cd8ee9794906d';\n  var AppKey = '6lFzrDFGOczHY42h-Erlj21ftOo';\n\n  var GMTString = new Date().toGMTString();\n  var ShaObj = new jsSHA('SHA-1', 'TEXT');\n  ShaObj.setHMACKey(AppKey, 'TEXT');\n  ShaObj.update('x-date: ' + GMTString);\n  var HMAC = ShaObj.getHMAC('B64');\n  var Authorization = 'hmac username=\\\"' + AppID + '\\\", algorithm=\\\"hmac-sha1\\\", headers=\\\"x-date\\\", signature=\\\"' + HMAC + '\\\"';\n\n  return { 'Authorization': Authorization, 'X-Date': GMTString /*,'Accept-Encoding': 'gzip'*/ }; //如果要將js運行在伺服器，可額外加入 'Accept-Encoding': 'gzip'，要求壓縮以減少網路傳輸資料量\n}\n\n// 串接附近的自行車租借站位資料\nlet data = [];\nfunction getSationData(longitude, latitude) {\n    axios({\n        method: 'get',\n        url: `https://ptx.transportdata.tw/MOTC/v2/Bike/Station/NearBy?$spatialFilter=nearby(${latitude},${longitude},500)`,\n        headers: GetAuthorizationHeader()        \n    })\n        .then((response) => {\n            console.log('租借站位資料', response)\n            data = response.data;\n\n            getAvailableData(longitude, latitude);\n        })\n        .catch((error) => console.log('error', error))\n}\n\n// 串接附近的即時車位資料\nlet filterData = [];\nfunction getAvailableData(longitude, latitude) {\n    axios({\n        method: 'get',\n        url: `https://ptx.transportdata.tw/MOTC/v2/Bike/Availability/NearBy?$spatialFilter=nearby(${latitude},${longitude},500&$format=JSON`,\n        headers: GetAuthorizationHeader()\n    })\n    .then((response) => {\n        console.log('車位資料', response)\n        const availableData =  response.data;\n\n        // 比對站位和即時車位資料\n        availableData.forEach((availableItem) => {\n            data.forEach((stationItem) => {\n                if (availableItem.StationUID === stationItem.StationUID) {\n                    availableItem.StationName = stationItem.StationName\n                    availableItem.StationAddress = stationItem.StationAddress\n                    availableItem.StationPosition = stationItem.StationPosition\n                    filterData.push(availableItem)\n                }\n            })\n        })\n        console.log('filterData', filterData)\n\n        setMarker();\n    })\n    .catch((error) => console.log('error', error))\n}\n\n// 標記 icon\nfunction setMarker() {\n  filterData.forEach((item) => {\n      L.marker([item.StationPosition.PositionLat, item.StationPosition.PositionLon]).addTo(mymap).bindPopup(\n          `\n          <div class=\"rent-card card\">\n            <div class=\"card-body p-0\">\n                <div class=\"d-flex align-items-center mb-2\">\n                    <span class=\"card-tag card-tag-1 me-1\">正常營運</span>\n                    <a class=\"ms-auto\" href=\"/\" title=\"分享此站點\"><img src=\"./assets/images/share.svg\" alt=\"\"></a>\n                </div>\n                <h4 class=\"card-title\">${item.StationName.Zh_tw}</h4>\n                <p class=\"card-subtitle fs-6 text-muted mb-2\">${item.StationAddress.Zh_tw}</p>\n                <p class=\"card-text fs-6\">可租借數量 <span class=\"fs-4\">${item.AvailableRentBikes}</span> 輛</p>\n            </div>\n          </div>\n          `\n      )\n  })\n}\n// 自製 icon\n\n"]}